apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
    spec:
      initContainers:
        - name: setup
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              cat /certs-secret/cert | base64 -d > /certs/cert &&
              cat /certs-secret/key | base64 -d > /certs/key &&
              chmod 600 /certs/* && chown 999 /certs/*
          volumeMounts:
            - mountPath: /certs-secret
              name: {{ .Values.deployment.volumeNames.certsSecretVolume }}
            - mountPath: /certs
              name: {{ .Values.deployment.volumeNames.certsVolume }}
      containers:
        - name: postgres
          image: postgres:14.5
          imagePullPolicy: IfNotPresent
          args:
            - -c
            - ssl=on
            - -c
            - ssl_cert_file=/var/lib/postgresql/certs/cert
            - -c
            - ssl_key_file=/var/lib/postgresql/certs/key
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/certs
              name: {{ .Values.deployment.volumeNames.certsVolume }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.deployment.secretNames.rootAccount }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.deployment.secretNames.rootAccount }}
