apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
spec:
  replicas: {{ .Values.deployment.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: {{ .Values.deployment.image }}
          imagePullPolicy: IfNotPresent
          ports:
            {{- range $port := .Values.deployment.ports }}
            - containerPort: {{ $port }}
            {{- end}}
          envFrom:
            {{- range $configmap := .Values.deployment.configMaps  }}
            - configMapRef:
                name: {{ $configmap }}
            {{- end}}
          env:
            {{- range $secret := .Values.deployment.secrets  }}
            - name: {{ $secret.envVariable }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.secretName }}
                  key: {{ $secret.secretKey }}
            {{- end}}
          {{- if .Values.deployment.livenessProbe }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.livenessProbe.path }}
              port: {{ .Values.deployment.livenessProbe.port }}
              scheme: {{ .Values.deployment.livenessProbe.scheme }}
            initialDelaySeconds: 10
            periodSeconds: 300
          {{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}
spec:
  type: {{ .Values.service.type }}
  selector:
    app: {{ .Values.appName }}
  ports:
    {{- range $port := .Values.service.ports }}
    - port: {{ $port.containerPort }}
      targetPort: {{ $port.containerPort }}
    {{- end}}